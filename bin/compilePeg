#!/usr/bin/env node
const fs = require('fs');
const pegjs = require('pegjs');

const dir = './src/';
const filename = 'Parser.peg.mjs';

// load the grammar as a string
const grammar = fs.readFileSync(`${dir}Parser.pegjs`).toString();

// generate the parser as "bare" - Not UMD, AMD etc.
const parser = pegjs.generate(grammar, {output: 'source', allowedStartRules: ['start', 'expression', 'number']});

// build an output string that contains the import statements that the parser needs
// within the output string, define the parser as a variable and export it (so we have a parser module)
const output = `import * as Expression from './State/Expression.mjs';
import * as ScriptFile from './State/ScriptFile.mjs';

const parser = ${parser};

const parse = parser.parse
export { parse }`;

// finally write the output string to a file
fs.writeFileSync(`${dir}${filename}`, output);
